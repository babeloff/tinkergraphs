name: Deploy Documentation to GitHub Pages

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install pixi
        uses: prefix-dev/setup-pixi@v0.4.1
        with:
          pixi-version: latest
          cache: true

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache Dokka
        uses: actions/cache@v3
        with:
          path: build/dokka
          key: ${{ runner.os }}-dokka-${{ hashFiles('src/**/*.kt', 'build.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-dokka-

      - name: Build project
        run: pixi run build

      - name: Generate API documentation
        run: pixi run docs

      - name: Create docs directory structure
        run: |
          mkdir -p docs-site
          mkdir -p docs-site/api
          mkdir -p docs-site/guides
          mkdir -p docs-site/examples
          mkdir -p docs-site/changelog

      - name: Copy API documentation
        run: |
          if [ -d "build/dokka/html" ]; then
            cp -r build/dokka/html/* docs-site/api/
          else
            echo "Warning: Dokka HTML output not found"
            mkdir -p docs-site/api
            echo "<h1>API Documentation</h1><p>Documentation generation failed</p>" > docs-site/api/index.html
          fi

      - name: Copy guides and tutorials
        run: |
          if [ -d "docs" ]; then
            find docs -name "*.adoc" -o -name "*.md" | while read file; do
              cp "$file" docs-site/guides/
            done
          fi

      - name: Copy changelog
        run: |
          if [ -d "docs/changelog" ]; then
            cp -r docs/changelog/* docs-site/changelog/
          fi

      - name: Generate main index page
        run: |
          cp .github/templates/docs-index.html docs-site/index.html

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: docs-site

  deploy:
    needs: build-docs
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
